/*
 * This file is generated by jOOQ.
 */
package com.example.technicaltest.jooq.tables.records;


import com.example.technicaltest.jooq.tables.AiAnalysisLog;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AiAnalysisLogRecord extends UpdatableRecordImpl<AiAnalysisLogRecord> implements Record8<Integer, String, String, String, Integer, BigDecimal, UInteger, UInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>technical_test.ai_analysis_log.id</code>.
     */
    public AiAnalysisLogRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>technical_test.ai_analysis_log.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>technical_test.ai_analysis_log.image_path</code>.
     */
    public AiAnalysisLogRecord setImagePath(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>technical_test.ai_analysis_log.image_path</code>.
     */
    public String getImagePath() {
        return (String) get(1);
    }

    /**
     * Setter for <code>technical_test.ai_analysis_log.success</code>.
     */
    public AiAnalysisLogRecord setSuccess(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>technical_test.ai_analysis_log.success</code>.
     */
    public String getSuccess() {
        return (String) get(2);
    }

    /**
     * Setter for <code>technical_test.ai_analysis_log.message</code>.
     */
    public AiAnalysisLogRecord setMessage(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>technical_test.ai_analysis_log.message</code>.
     */
    public String getMessage() {
        return (String) get(3);
    }

    /**
     * Setter for <code>technical_test.ai_analysis_log.class</code>.
     */
    public AiAnalysisLogRecord setClass_(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>technical_test.ai_analysis_log.class</code>.
     */
    public Integer getClass_() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>technical_test.ai_analysis_log.confidence</code>.
     */
    public AiAnalysisLogRecord setConfidence(BigDecimal value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>technical_test.ai_analysis_log.confidence</code>.
     */
    public BigDecimal getConfidence() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>technical_test.ai_analysis_log.request_timestamp</code>.
     */
    public AiAnalysisLogRecord setRequestTimestamp(UInteger value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>technical_test.ai_analysis_log.request_timestamp</code>.
     */
    public UInteger getRequestTimestamp() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>technical_test.ai_analysis_log.response_timestamp</code>.
     */
    public AiAnalysisLogRecord setResponseTimestamp(UInteger value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>technical_test.ai_analysis_log.response_timestamp</code>.
     */
    public UInteger getResponseTimestamp() {
        return (UInteger) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, Integer, BigDecimal, UInteger, UInteger> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, Integer, BigDecimal, UInteger, UInteger> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AiAnalysisLog.AI_ANALYSIS_LOG.ID;
    }

    @Override
    public Field<String> field2() {
        return AiAnalysisLog.AI_ANALYSIS_LOG.IMAGE_PATH;
    }

    @Override
    public Field<String> field3() {
        return AiAnalysisLog.AI_ANALYSIS_LOG.SUCCESS;
    }

    @Override
    public Field<String> field4() {
        return AiAnalysisLog.AI_ANALYSIS_LOG.MESSAGE;
    }

    @Override
    public Field<Integer> field5() {
        return AiAnalysisLog.AI_ANALYSIS_LOG.CLASS;
    }

    @Override
    public Field<BigDecimal> field6() {
        return AiAnalysisLog.AI_ANALYSIS_LOG.CONFIDENCE;
    }

    @Override
    public Field<UInteger> field7() {
        return AiAnalysisLog.AI_ANALYSIS_LOG.REQUEST_TIMESTAMP;
    }

    @Override
    public Field<UInteger> field8() {
        return AiAnalysisLog.AI_ANALYSIS_LOG.RESPONSE_TIMESTAMP;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getImagePath();
    }

    @Override
    public String component3() {
        return getSuccess();
    }

    @Override
    public String component4() {
        return getMessage();
    }

    @Override
    public Integer component5() {
        return getClass_();
    }

    @Override
    public BigDecimal component6() {
        return getConfidence();
    }

    @Override
    public UInteger component7() {
        return getRequestTimestamp();
    }

    @Override
    public UInteger component8() {
        return getResponseTimestamp();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getImagePath();
    }

    @Override
    public String value3() {
        return getSuccess();
    }

    @Override
    public String value4() {
        return getMessage();
    }

    @Override
    public Integer value5() {
        return getClass_();
    }

    @Override
    public BigDecimal value6() {
        return getConfidence();
    }

    @Override
    public UInteger value7() {
        return getRequestTimestamp();
    }

    @Override
    public UInteger value8() {
        return getResponseTimestamp();
    }

    @Override
    public AiAnalysisLogRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AiAnalysisLogRecord value2(String value) {
        setImagePath(value);
        return this;
    }

    @Override
    public AiAnalysisLogRecord value3(String value) {
        setSuccess(value);
        return this;
    }

    @Override
    public AiAnalysisLogRecord value4(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public AiAnalysisLogRecord value5(Integer value) {
        setClass_(value);
        return this;
    }

    @Override
    public AiAnalysisLogRecord value6(BigDecimal value) {
        setConfidence(value);
        return this;
    }

    @Override
    public AiAnalysisLogRecord value7(UInteger value) {
        setRequestTimestamp(value);
        return this;
    }

    @Override
    public AiAnalysisLogRecord value8(UInteger value) {
        setResponseTimestamp(value);
        return this;
    }

    @Override
    public AiAnalysisLogRecord values(Integer value1, String value2, String value3, String value4, Integer value5, BigDecimal value6, UInteger value7, UInteger value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AiAnalysisLogRecord
     */
    public AiAnalysisLogRecord() {
        super(AiAnalysisLog.AI_ANALYSIS_LOG);
    }

    /**
     * Create a detached, initialised AiAnalysisLogRecord
     */
    public AiAnalysisLogRecord(Integer id, String imagePath, String success, String message, Integer class_, BigDecimal confidence, UInteger requestTimestamp, UInteger responseTimestamp) {
        super(AiAnalysisLog.AI_ANALYSIS_LOG);

        setId(id);
        setImagePath(imagePath);
        setSuccess(success);
        setMessage(message);
        setClass_(class_);
        setConfidence(confidence);
        setRequestTimestamp(requestTimestamp);
        setResponseTimestamp(responseTimestamp);
    }
}
