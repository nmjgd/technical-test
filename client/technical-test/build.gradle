plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'nu.studer.jooq' version '5.2.1'	
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sourceSets {
    jooq {
      java {
        srcDirs = ['src/jooq/java']
      }
    }
    main {
      java {
        srcDirs = ['src/main/java']
      }
      compileClasspath += jooq.output
      runtimeClasspath += jooq.output
    }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	jooqGenerator 'mysql:mysql-connector-java'
}

test {
	useJUnitPlatform()
}

jooq {
    configurations {
        main {
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
					driver = 'com.mysql.cj.jdbc.Driver'
					url = 'jdbc:mysql://db:3306/technical_test'
					user = 'root'
					password = 'root'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.mysql.MySQLDatabase'
                        inputSchema = 'technical_test'
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
						packageName = 'com.example.technicaltest.jooq'
                        directory = 'src/jooq/java'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}
